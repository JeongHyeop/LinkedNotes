<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <PageId>2bb0c479-d0ca-4f89-b7b6-62c58475ace9</PageId>
  <Text>{\rtf1\ansi\ansicpg949\deff0\deflang1033\deflangfe1042{\fonttbl{\f0\fmodern\fprq1\fcharset129 \'b1\'bc\'b8\'b2;}{\f1\fnil\fcharset0 Microsoft Sans Serif;}{\f2\fnil\fcharset129 \'b1\'bc\'b8\'b2;}{\f3\fnil\fcharset129 KoPub\'b9\'d9\'c5\'c1\'c3\'bc Light;}{\f4\fswiss\fcharset0 KoPub\'b9\'d9\'c5\'c1\'c3\'bc Light;}{\f5\fnil\fcharset129 KoPub\'b5\'b8\'bf\'f2\'c3\'bc Bold;}}
{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;}
\viewkind4\uc1\pard\lang1042\f0\fs18\'ba\'a4\'c5\'cd\'b6\'f5 \'b9\'e8\'bf\'ad\'c0\'bb \'b4\'eb\'c3\'bc\'c7\'cf\'bf\'a9 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2  \'b0\'a1\'c0\'e5 \'b8\'b9\'c0\'cc \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 \'c5\'a9\'b1\'e2\'b0\'a1 \'b0\'ed\'c1\'a4\'c0\'fb\'c0\'cc\'c1\'f6 \'be\'ca\'b0\'ed \'b0\'a1\'ba\'af\'c0\'fb\'c0\'ce \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\f1\fs20  \f0\fs18\'c0\'cc\'b4\'d9. \par
\par
\'bb\'e7\'bf\'eb\'c7\'d8\'be\'df \'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec\par
-\'c0\'fa\'c0\'e5\'c7\'d2 \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6\'b0\'a1 \'b0\'a1\'ba\'af\'c0\'fb\'c0\'cf\'b6\'a7\par
-\'c1\'df\'b0\'a3\'bf\'a1 \'b5\'a5\'c0\'cc\'c5\'cd \'bb\'f0\'c0\'d4\'c0\'cc\'b3\'aa \'bb\'e8\'c1\'a6\'b0\'a1 \'be\'f8\'c0\'bb \'b6\'a7 - \'ba\'a4\'c5\'cd\'b4\'c2 \'b9\'e8\'bf\'ad\'c3\'b3\'b7\'b3 \'bc\'f8\'c2\'f7\'c0\'fb\'c0\'b8\'b7\'ce \'c0\'fa\'c0\'e5\'c7\'d1\'b4\'d9.\par
-\'b0\'cb\'bb\'f6\'c0\'bb \'b8\'b9\'c0\'cc \'c7\'cf\'c1\'f6 \'be\'ca\'c0\'bb\'b6\'a7\par
-\'b5\'a5\'c0\'cc\'c5\'cd \'c1\'a2\'b1\'d9\'c0\'bb \'b7\'a3\'b4\'fd\'c7\'cf\'b0\'d4 \'c7\'cf\'b0\'ed\'bd\'cd\'c0\'bb \'b6\'a7 \par
\par
\pard\cf1\f2 vector\'bf\'cd list\'c0\'c7 \'c2\'f7\'c0\'cc\f3\par
                 \tab           \'ba\'a4\'c5\'cd\tab\'b8\'ae\'bd\'ba\'c6\'ae\par
\f2\'c5\'a9\'b1\'e2 \'ba\'af\'b0\'e6 \'b0\'a1\'b4\'c9\tab\tab O \tab    O\par
\'c1\'df\'b0\'a3 \'bb\'f0\'c0\'d4, \'bb\'e8\'c1\'a6 \'bf\'eb\'c0\'cc \tab X \tab    O\par
\'bc\'f8\'c2\'f7 \'c1\'a2\'b1\'d9 \'b0\'a1\'b4\'c9 \tab\tab O \tab    O\par
\pard\'b7\'a3\'b4\'fd \'c1\'a2\'b1\'d9 \'b0\'a1\'b4\'c9 \tab\tab O \tab    X\cf0\f0\par
\par
\'c6\'af\'c2\'a1\par
\pard\f3\fs19 -\'c1\'df\'b0\'a3 \'bb\'f0\'c0\'d4\f4 , \f3\'bb\'e8\'c1\'a6\'b0\'a1 \'be\'f8\'b0\'ed \'b7\'a3\'b4\'fd \'c1\'a2\'b1\'d9\'c0\'bb \'c0\'da\'c1\'d6 \'c7\'d8\'be\'df \'b5\'c8\'b4\'d9\'b8\'e9 \f4 vector\f3\'b0\'a1 \'c1\'c1\'b0\'ed\f4 , \f3\'c1\'df\'b0\'a3 \'bb\'f0\'c0\'d4\f4 , \f3\'bb\'e8\'c1\'a6\'b0\'a1 \'c0\'da\'c1\'d6 \'c0\'d6\'c0\'b8\'b8\'e7 \'b7\'a3\'b4\'fd \'c1\'a2\'b1\'d9\'c0\'cc \'c7\'ca\'bf\'e4 \'be\'f8\'c0\'b8\'b8\'e9 \f4 list\f3\'b0\'a1 \'c1\'c1\'b4\'d9\f4 .\par
\par
\cf1\f2\fs18 vector &lt; \'c0\'da\'b7\'e1\'c7\'fc &gt;* \'ba\'af\'bc\'f6 \'c0\'cc\'b8\'a7 = new vector&lt; \'c0\'da\'b7\'e1\'c7\'fc &gt;;\par
vector&lt; int &gt;* vector1 = new vector&lt; int&gt;;\cf0\f0\par
\cf2\b\f5\fs16\'b8\'e2\'b9\'f6 \'bc\'b3\'b8\'ed\par
\cf1\b0\f2\fs18 assign \tab\tab\'c6\'af\'c1\'a4 \'bf\'f8\'bc\'d2\'b7\'ce \'c3\'a4\'bf\'ee\'b4\'d9\par
at \tab\tab\'c6\'af\'c1\'a4 \'c0\'a7\'c4\'a1\'c0\'c7 \'bf\'f8\'bc\'d2\'c0\'c7 \'c2\'fc\'c1\'b6\'b8\'a6 \'b8\'ae\'c5\'cf\par
back \tab\tab\'b8\'b6\'c1\'f6\'b8\'b7 \'bf\'f8\'bc\'d2\'c0\'c7 \'c2\'fc\'c1\'b6\'b8\'a6 \'b8\'ae\'c5\'cf\par
begin \tab\tab\'c3\'b9 \'b9\'f8\'c2\'b0 \'bf\'f8\'bc\'d2\'c0\'c7 \'b7\'a3\'b4\'fd \'c1\'a2\'b1\'d9 \'b9\'dd\'ba\'b9\'c0\'da\'b8\'a6 \'b8\'ae\'c5\'cf\par
clear \tab\tab\'b8\'f0\'b5\'e7 \'bf\'f8\'bc\'d2\'b8\'a6 \'bb\'e8\'c1\'a6\par
empty \tab\tab\'be\'c6\'b9\'ab\'b0\'cd\'b5\'b5 \'be\'f8\'c0\'b8\'b8\'e9 true \'b8\'ae\'c5\'cf\par
end \tab\tab\'b8\'b6\'c1\'f6\'b8\'b7 \'bf\'f8\'bc\'d2 \'b4\'d9\'c0\'bd\'c0\'c7(\'bb\'e7\'bf\'eb\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'ba \'bf\'b5\'bf\'aa) \'b9\'dd\'ba\'b9\'c0\'da\'b8\'a6 \'b8\'ae\'c5\'cf\par
erase \tab\tab\'c6\'af\'c1\'a4 \'c0\'a7\'c4\'a1\'c0\'c7 \'bf\'f8\'bc\'d2\'b3\'aa \'c1\'f6\'c1\'a4 \'b9\'fc\'c0\'a7\'c0\'c7 \'bf\'f8\'bc\'d2\'b8\'a6 \'bb\'e8\'c1\'a6\par
front \tab\tab\'c3\'b9 \'b9\'f8\'c2\'b0 \'bf\'f8\'bc\'d2\'c0\'c7 \'c2\'fc\'c1\'b6\'b8\'a6 \'b8\'ae\'c5\'cf\par
insert \tab\tab\'c6\'af\'c1\'a4 \'c0\'a7\'c4\'a1\'bf\'a1 \'bf\'f8\'bc\'d2 \'bb\'f0\'c0\'d4\par
pop_back \tab\'b8\'b6\'c1\'f6\'b8\'b7 \'bf\'f8\'bc\'d2\'b8\'a6 \'bb\'e8\'c1\'a6\par
push_back \tab\'b8\'b6\'c1\'f6\'b8\'b7\'bf\'a1 \'bf\'f8\'bc\'d2\'b8\'a6 \'c3\'df\'b0\'a1\par
rbegin \tab\tab\'bf\'aa\'b9\'e6\'c7\'e2\'c0\'b8\'b7\'ce \'c3\'b9 \'b9\'f8\'c2\'b0 \'bf\'f8\'bc\'d2\'c0\'c7 \'b9\'dd\'ba\'b9\'c0\'da\'b8\'a6 \'b8\'ae\'c5\'cf\par
rend \tab\tab\'bf\'aa\'b9\'e6\'c7\'e2\'c0\'b8\'b7\'ce \'b8\'b6\'c1\'f6\'b8\'b7 \'bf\'f8\'bc\'d2 \'b4\'d9\'c0\'bd\'c0\'c7 \'b9\'dd\'ba\'b9\'c0\'da\'b8\'a6 \'b8\'ae\'c5\'cf\par
reserve \tab\tab\'c1\'f6\'c1\'a4\'b5\'c8 \'c5\'a9\'b1\'e2\'c0\'c7 \'c0\'fa\'c0\'e5 \'b0\'f8\'b0\'a3\'c0\'bb \'c8\'ae\'ba\'b8\par
size \tab\tab\'bf\'f8\'bc\'d2\'c0\'c7 \'b0\'b3\'bc\'f6\'b8\'a6 \'b8\'ae\'c5\'cf\par
\pard swap \tab\tab vector \'c0\'c7 \'b5\'ce \'bf\'f8\'bc\'d2\'b8\'a6 \'bc\'ad\'b7\'ce \'b1\'b3\'c8\'af\'c7\'d1\'b4\'d9\cf0\f1\fs20\par
}
&#x0;</Text>
  <Encrypted>false</Encrypted>
  <Name>Vector</Name>
  <CreatedBy>Anonymous</CreatedBy>
  <CreatedOn>2017-04-01T15:55:16.9068605+09:00</CreatedOn>
  <UpdatedBy>Anonymous</UpdatedBy>
  <UpdatedOn>2017-04-11T17:59:21.1415319+09:00</UpdatedOn>
  <Words>벡터란 배열을 대체하여 사용하는  가장 많이 사용되는 크기가 고정적이지 않고 가변적인 자료구조 이다. 

사용해야 하는 경우
-저장할 데이터 개수가 가변적일때
-중간에 데이터 삽입이나 삭제가 없을 때 - 벡터는 배열처럼 순차적으로 저장한다.
-검색을 많이 하지 않을때
-데이터 접근을 랜덤하게 하고싶을 때 

vector와 list의 차이
                 	          벡터	리스트
크기 변경 가능		O 	   O
중간 삽입, 삭제 용이 	X 	   O
순차 접근 가능 		O 	   O
랜덤 접근 가능 		O 	   X

특징
-중간 삽입, 삭제가 없고 랜덤 접근을 자주 해야 된다면 vector가 좋고, 중간 삽입, 삭제가 자주 있으며 랜덤 접근이 필요 없으면 list가 좋다.

vector &lt; 자료형 &gt;* 변수 이름 = new vector&lt; 자료형 &gt;;
vector&lt; int &gt;* vector1 = new vector&lt; int&gt;;
멤버 설명
assign 		특정 원소로 채운다
at 		특정 위치의 원소의 참조를 리턴
back 		마지막 원소의 참조를 리턴
begin 		첫 번째 원소의 랜덤 접근 반복자를 리턴
clear 		모든 원소를 삭제
empty 		아무것도 없으면 true 리턴
end 		마지막 원소 다음의(사용하지 않은 영역) 반복자를 리턴
erase 		특정 위치의 원소나 지정 범위의 원소를 삭제
front 		첫 번째 원소의 참조를 리턴
insert 		특정 위치에 원소 삽입
pop_back 	마지막 원소를 삭제
push_back 	마지막에 원소를 추가
rbegin 		역방향으로 첫 번째 원소의 반복자를 리턴
rend 		역방향으로 마지막 원소 다음의 반복자를 리턴
reserve 		지정된 크기의 저장 공간을 확보
size 		원소의 개수를 리턴
swap 		vector 의 두 원소를 서로 교환한다</Words>
  <PublishedOn>0001-01-01T00:00:00</PublishedOn>
  <PublishedUrl />
  <PublishedService>0</PublishedService>
</Page>