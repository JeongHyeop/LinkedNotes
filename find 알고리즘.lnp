<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <PageId>c88937d0-e31d-4e37-b9a3-f43fc3e98d24</PageId>
  <Text>{\rtf1\ansi\ansicpg949\deff0\deflang1033\deflangfe1042{\fonttbl{\f0\fnil\fcharset0 Microsoft Sans Serif;}{\f1\fmodern\fprq1\fcharset129 \'b1\'bc\'b8\'b2;}{\f2\fnil\fcharset129 \'b1\'bc\'b8\'b2;}}
{\colortbl ;\red0\green0\blue0;}
\viewkind4\uc1\pard\lang1042\f0\fs20 find \f1\'be\'cb\'b0\'ed\'b8\'ae\'c1\'f2\'c0\'ba \'c4\'c1\'c5\'d7\'c0\'cc\'b3\'ca\'bf\'a1 \'c0\'d6\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd \'c1\'df \'bf\'f8\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'bb \'c3\'a3\'b1\'e2 \'c0\'a7\'c7\'d8\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d1\'b4\'d9.\par
\par
\cf1\f2\fs18 #include &lt;algorithm&gt;\par
#include &lt;vector&gt;\par
#include &lt;iostream&gt;\par
using namespace std;\par
int main()\par
\{\par
vector&lt; int &gt; CharItems;\par
CharItems.push_back( 12 );\par
CharItems.push_back( 100 );\par
CharItems.push_back( 77 );\par
\par
vector&lt; int &gt;::iterator FindIter;\par
\par
// CharItems\'c0\'c7 \'c3\'b3\'c0\'bd\'b0\'fa \'b3\'a1\'bf\'a1\'bc\'ad 12\'b8\'a6 \'c3\'a3\'b4\'c2\'b4\'d9.\par
FindIter = find( CharItems.begin(), CharItems.end(), 12 );\par
if( FindIter != CharItems.end() )\par
\{\par
cout &lt;&lt; "CharItem 12\'b8\'a6 \'c3\'a3\'be\'d2\'bd\'c0\'b4\'cf\'b4\'d9." &lt;&lt; endl;\par
\}\par
else\par
\{\par
cout &lt;&lt; "CharItem 12\'b4\'c2 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9" &lt;&lt; endl;\par
\}\par
\par
// CharItems \'b5\'ce \'b9\'f8\'c2\'b0\'bf\'cd \'b3\'a1\'bf\'a1\'bc\'ad12\'b8\'a6 \'c3\'a3\'b4\'c2\'b4\'d9.\par
// ++CharItems.begin()\'b7\'ce \'b9\'dd\'ba\'b9\'c0\'da\'b8\'a6 \'c7\'d1\'c4\'ad \'c0\'cc\'b5\'bf\'bd\'c3\'c5\'b2\'b4\'d9.\par
FindIter = find( ++CharItems.begin(), CharItems.end(), 12 );\par
if( FindIter != CharItems.end() )\par
\{\par
cout &lt;&lt; "CharItem 12\'b8\'a6 \'c3\'a3\'be\'d2\'bd\'c0\'b4\'cf\'b4\'d9." &lt;&lt; endl;\par
10\'c0\'e5 \'be\'cb\'b0\'ed\'b8\'ae\'c1\'f2 182\par
\}\par
else\par
\{\par
cout &lt;&lt; "CharItem 12\'b4\'c2 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9" &lt;&lt; endl;\par
\}\par
return 0;\par
\}\cf0\f0\fs20\par
}
&#x0;</Text>
  <Encrypted>false</Encrypted>
  <Name>find 알고리즘</Name>
  <CreatedBy>Anonymous</CreatedBy>
  <CreatedOn>2017-04-12T23:29:42.6681969+09:00</CreatedOn>
  <UpdatedBy>Anonymous</UpdatedBy>
  <UpdatedOn>2017-04-12T23:33:05.945757+09:00</UpdatedOn>
  <Words>find 알고리즘은 컨테이너에 있는 데이터 중 원하는 것을 찾기 위해서 사용한다.

#include &lt;algorithm&gt;
#include &lt;vector&gt;
#include &lt;iostream&gt;
using namespace std;
int main()
{
vector&lt; int &gt; CharItems;
CharItems.push_back( 12 );
CharItems.push_back( 100 );
CharItems.push_back( 77 );

vector&lt; int &gt;::iterator FindIter;

// CharItems의 처음과 끝에서 12를 찾는다.
FindIter = find( CharItems.begin(), CharItems.end(), 12 );
if( FindIter != CharItems.end() )
{
cout &lt;&lt; "CharItem 12를 찾았습니다." &lt;&lt; endl;
}
else
{
cout &lt;&lt; "CharItem 12는 없습니다" &lt;&lt; endl;
}

// CharItems 두 번째와 끝에서12를 찾는다.
// ++CharItems.begin()로 반복자를 한칸 이동시킨다.
FindIter = find( ++CharItems.begin(), CharItems.end(), 12 );
if( FindIter != CharItems.end() )
{
cout &lt;&lt; "CharItem 12를 찾았습니다." &lt;&lt; endl;
10장 알고리즘 182
}
else
{
cout &lt;&lt; "CharItem 12는 없습니다" &lt;&lt; endl;
}
return 0;
}</Words>
  <PublishedOn>0001-01-01T00:00:00</PublishedOn>
  <PublishedUrl />
  <PublishedService>0</PublishedService>
</Page>